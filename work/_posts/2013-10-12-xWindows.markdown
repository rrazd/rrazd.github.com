---
layout: linkage
title: 	Arcade Game
thumbnail: /images/work/xWindows_thumb.png
category: work
keywords: Rashna, Razdan, computer, C++, game, XLib
description: Hi, I am Rashna Razdan, a web and software developer. Check out this fun game I built using XLib

---

######Creating a Simple Video Game

I had a ton of fun creating a simple video game for a User Interface (cs 349) course that I took in my 4th year of Computer Engineering. The point of the game is to control a character through a terrain to meet a goal. The code for this project can be found <a href="https://github.com/rrazd/ArcadeGame">here</a>.

To begin, I got familiar with existing examples of events and drawing in X Windows. Going through these simple examples really helped me understand how things worked. While developing this game, I learnt a lot about the basics of game development. For instance, I learnt a lot about bitmaps, sprites, keeping the speed of events being shown in the game independent of the frame rate, collision detection, event loops, performance issues and more!

Technologies used were:

-  XLib API
-  C++
-  Macbook Pro and Xcode for development
-  Testing done on both OSX and Linux 
-  SVN as the repository of choice.

You can see some screenshots of the end product below: 

<figure>
	<div class="web">
		<img src="/images/work/ArcadeGame1.png" alt="SplashScreen">
	</div>
	<figurecaption>Start screen</figurecaption>

</figure> 

<figure>
	<div class="web">
		<img src="/images/work/ArcadeGame2.png" alt="StartingPosition">
	</div>
	<figurecaption>Starting position</figurecaption>

</figure> 

<figure>
	<div class="web">
		<img src="/images/work/ArcadeGame3.png" alt="PausePosition">
	</div>
	<figurecaption>Paused game</figurecaption>

</figure> 

``` html

Functionalities:

1. The Character can:

	-Stand still, facing either right or left

	-Run, either right or left
	
	-Jump, either to the right or left, the distance/height jumped depends on if he is 
	running
	
	-Perform simple collision detection

2. The game world contains a sun that moves across the sky at a constant speed regardless of what the character is doing.

3. The game world contains objects that have distinctive shapes that are worth either positive points or negative points

4. A points counter and a healthbar is shown at the top left

5. Certain attributes (running speed, jumping speed, speed of the sun, frame rate) are tuneable via command-line parameters 

6. All speeds should be independent of each other

7. If window is resized the game positions itself in the center. 

8. A message is displayed if the window is made too small

```
